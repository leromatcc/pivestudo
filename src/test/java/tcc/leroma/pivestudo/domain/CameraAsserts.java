package tcc.leroma.pivestudo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CameraAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCameraAllPropertiesEquals(Camera expected, Camera actual) {
        assertCameraAutoGeneratedPropertiesEquals(expected, actual);
        assertCameraAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCameraAllUpdatablePropertiesEquals(Camera expected, Camera actual) {
        assertCameraUpdatableFieldsEquals(expected, actual);
        assertCameraUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCameraAutoGeneratedPropertiesEquals(Camera expected, Camera actual) {
        assertThat(expected)
            .as("Verify Camera auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCameraUpdatableFieldsEquals(Camera expected, Camera actual) {
        assertThat(expected)
            .as("Verify Camera relevant properties")
            .satisfies(e -> assertThat(e.getDescricao()).as("check descricao").isEqualTo(actual.getDescricao()))
            .satisfies(e -> assertThat(e.getEnderecoRede()).as("check enderecoRede").isEqualTo(actual.getEnderecoRede()))
            .satisfies(e -> assertThat(e.getApi()).as("check api").isEqualTo(actual.getApi()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCameraUpdatableRelationshipsEquals(Camera expected, Camera actual) {
        assertThat(expected)
            .as("Verify Camera relationships")
            .satisfies(e -> assertThat(e.getPontoAcesso()).as("check pontoAcesso").isEqualTo(actual.getPontoAcesso()));
    }
}
