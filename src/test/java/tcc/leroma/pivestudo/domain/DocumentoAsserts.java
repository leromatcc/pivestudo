package tcc.leroma.pivestudo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class DocumentoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDocumentoAllPropertiesEquals(Documento expected, Documento actual) {
        assertDocumentoAutoGeneratedPropertiesEquals(expected, actual);
        assertDocumentoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDocumentoAllUpdatablePropertiesEquals(Documento expected, Documento actual) {
        assertDocumentoUpdatableFieldsEquals(expected, actual);
        assertDocumentoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDocumentoAutoGeneratedPropertiesEquals(Documento expected, Documento actual) {
        assertThat(expected)
            .as("Verify Documento auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDocumentoUpdatableFieldsEquals(Documento expected, Documento actual) {
        assertThat(expected)
            .as("Verify Documento relevant properties")
            .satisfies(e -> assertThat(e.getTipoDocumento()).as("check tipoDocumento").isEqualTo(actual.getTipoDocumento()))
            .satisfies(e -> assertThat(e.getNumeroDocumento()).as("check numeroDocumento").isEqualTo(actual.getNumeroDocumento()))
            .satisfies(e -> assertThat(e.getDescricao()).as("check descricao").isEqualTo(actual.getDescricao()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDocumentoUpdatableRelationshipsEquals(Documento expected, Documento actual) {
        assertThat(expected)
            .as("Verify Documento relationships")
            .satisfies(e -> assertThat(e.getPessoa()).as("check pessoa").isEqualTo(actual.getPessoa()));
    }
}
