package tcc.leroma.pivestudo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PontoAcessoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPontoAcessoAllPropertiesEquals(PontoAcesso expected, PontoAcesso actual) {
        assertPontoAcessoAutoGeneratedPropertiesEquals(expected, actual);
        assertPontoAcessoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPontoAcessoAllUpdatablePropertiesEquals(PontoAcesso expected, PontoAcesso actual) {
        assertPontoAcessoUpdatableFieldsEquals(expected, actual);
        assertPontoAcessoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPontoAcessoAutoGeneratedPropertiesEquals(PontoAcesso expected, PontoAcesso actual) {
        assertThat(expected)
            .as("Verify PontoAcesso auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPontoAcessoUpdatableFieldsEquals(PontoAcesso expected, PontoAcesso actual) {
        assertThat(expected)
            .as("Verify PontoAcesso relevant properties")
            .satisfies(e -> assertThat(e.getDescricao()).as("check descricao").isEqualTo(actual.getDescricao()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPontoAcessoUpdatableRelationshipsEquals(PontoAcesso expected, PontoAcesso actual) {
        assertThat(expected)
            .as("Verify PontoAcesso relationships")
            .satisfies(e -> assertThat(e.getEstabelecimento()).as("check estabelecimento").isEqualTo(actual.getEstabelecimento()));
    }
}
